Program.Sub.ScreenSU.Start
Gui.F_ContactList..create
Gui.F_ContactList..caption("Email Purchase Order")
Gui.F_ContactList..size(7545,7305)
Gui.F_ContactList..position(0,0)
Gui.F_ContactList..event(UnLoad,f_contactlist_unload)
Gui.F_ContactList..forecolor(0)
Gui.F_ContactList..BackColor(-2147483633)
Gui.F_ContactList..mousepointer(0)
Gui.F_ContactList..MinX(0)
Gui.F_ContactList..MinY(0)
Gui.F_ContactList.lstEmails.create(listview)
Gui.F_ContactList.lstEmails.size(3210,1050)
Gui.F_ContactList.lstEmails.position(4005,495)
Gui.F_ContactList.lstEmails.View(2)
Gui.F_ContactList.txtEmail.create(textbox,"",True,3690,300,0,105,1200,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtEmail.tabstop(True)
Gui.F_ContactList.txtEmail.tabindex(1)
Gui.F_ContactList.cmdAdd.create(button)
Gui.F_ContactList.cmdAdd.caption("Add")
Gui.F_ContactList.cmdAdd.size(840,375)
Gui.F_ContactList.cmdAdd.position(105,1605)
Gui.F_ContactList.cmdAdd.event(Click,cmdadd_click)
Gui.F_ContactList.cmdRemove.create(button)
Gui.F_ContactList.cmdRemove.caption("Remove")
Gui.F_ContactList.cmdRemove.size(810,375)
Gui.F_ContactList.cmdRemove.position(1095,1605)
Gui.F_ContactList.cmdRemove.event(Click,cmdremove_click)
Gui.F_ContactList.lbl1.create(label,"Choose an existing contact",True,2565,255,1,100,300,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl2.create(label,"Enter an email address",True,2850,255,1,100,1000,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.cmdSend.create(button)
Gui.F_ContactList.cmdSend.caption("Send")
Gui.F_ContactList.cmdSend.size(855,360)
Gui.F_ContactList.cmdSend.position(105,6345)
Gui.F_ContactList.cmdSend.event(Click,cmdsend_click)
Gui.F_ContactList.mltxtBody.create(textboxm)
Gui.F_ContactList.mltxtBody.size(7095,2595)
Gui.F_ContactList.mltxtBody.position(105,3630)
Gui.F_ContactList.txtSubject.create(textbox,"",True,6930,300,0,90,3000,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtSubject.maxLength(72)
Gui.F_ContactList.lbl3.create(label,"Subject",True,1935,255,1,100,2775,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl4.create(label,"Body",True,1935,255,1,100,3405,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl5.create(label,"Recipients",True,1935,255,1,4000,300,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl6.create(label,"Reply To Email Address",True,1935,255,1,100,2125,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.txtReplyEmail.create(textbox,"",True,3690,300,0,105,2355,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.ddlContact.create(dropdownlist)
Gui.F_ContactList.ddlContact.size(3690,330)
Gui.F_ContactList.ddlContact.position(105,540)
Gui.F_ContactList.ddlContact.Event(Change,ddlcontact_click)
Gui.EffectiveDate..Create
Gui.EffectiveDate..Size(2640,1905)
Gui.EffectiveDate..MinX(0)
Gui.EffectiveDate..MinY(0)
Gui.EffectiveDate..Position(0,0)
Gui.EffectiveDate..BackColor(-2147483633)
Gui.EffectiveDate..MousePointer(0)
Gui.EffectiveDate..Caption("Effective Date")
Gui.EffectiveDate..Event(UnLoad,EffectiveDate_UnLoad)
Gui.EffectiveDate.dtpEffectiveDate.Create(DatePicker)
Gui.EffectiveDate.dtpEffectiveDate.Size(1935,285)
Gui.EffectiveDate.dtpEffectiveDate.Position(255,525)
Gui.EffectiveDate.lbl1.Create(Label,"Effective Date",True,1935,255,0,255,300,True,0,"Arial",8,-2147483633,0)
Gui.EffectiveDate.cmdSelectEffDate.Create(Button)
Gui.EffectiveDate.cmdSelectEffDate.Size(960,375)
Gui.EffectiveDate.cmdSelectEffDate.Position(255,990)
Gui.EffectiveDate.cmdSelectEffDate.Caption("Select")
Gui.EffectiveDate.cmdSelectEffDate.Event(Click,cmdSelectEffDate_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sTemplate.Declare
v.Global.sSignature.Declare
V.Global.dEffectiveDate.Declare(Date)
V.Global.sVendorName.Declare
V.Global.sFileName.Declare(String)
V.Global.sEmailName.Declare(String)
V.Global.sFilePath.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
F.ODBC.Connection!con.OpenCompanyConnection

f.Intrinsic.Control.CallSub(TemplateFolderCheck)

F.Intrinsic.Date.DateAdd("D", 3, V.Ambient.Date, V.Global.dEffectiveDate)
GUI.EffectiveDate.dtpEffectiveDate.Value(V.Global.dEffectiveDate.DateComp)
gui.EffectiveDate..show

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_EXTRACT_BACS.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Main.End

Program.Sub.TemplateFolderCheck.Start
v.local.serror.declare
v.Local.sDir.Declare
v.Local.bExists.Declare
v.Local.sDFile.Declare
v.Local.sSFile.Declare
v.Local.sText.Declare
v.Local.iRet.Declare
v.Local.sCompanyName.Declare

'first check the base directory, if it's there, skip the rest
f.Intrinsic.String.Build("{0}\custom\5472\",v.Caller.GlobalDir,v.Local.sDir)
f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExists)
f.Intrinsic.Control.If(v.Local.bExists,=,False)
	f.Intrinsic.File.CreateDir(v.Local.sDir)
f.Intrinsic.Control.EndIf	

''check for templates directory
'f.Intrinsic.String.Build("{0}\Custom\5472\Templates\",v.Caller.GlobalDir,v.Local.sDir)
'f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExists)
'f.Intrinsic.Control.If(v.Local.bExists,=,False)
'	f.Intrinsic.File.CreateDir(v.Local.sDir)
'f.Intrinsic.Control.EndIf	

'check for templates directory
f.Intrinsic.String.Build("{0}\Custom\5472\Templates\",v.Caller.GlobalDir,v.Local.sDir)
f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExists)
f.Intrinsic.Control.If(v.Local.bExists,=,False)
	f.Intrinsic.File.CreateDir(v.Local.sDir)
f.Intrinsic.Control.EndIf

'create the Default template
f.Intrinsic.String.Build("{0}\Custom\5472\Templates\Body_Template.txt",v.Caller.GlobalDir,v.Local.sSFile)

f.Intrinsic.File.Exists(v.Local.sSFile,v.Local.bExists)
f.Intrinsic.Control.If(v.Local.bExists)
	f.Intrinsic.File.File2String(v.Local.sSFile,v.Global.sTemplate)
f.Intrinsic.Control.Else
	f.Intrinsic.String.Build("Hi, {0}{0}The payments for the following invoices have been made to %VENDORNAME%.{0}%INVOICEDETAILS%{0}The total amount of the payment is %TOTALAMT%.",v.Ambient.NewLine,v.global.sTemplate)
	f.Intrinsic.File.String2File(v.Local.sSFile,v.Global.sTemplate)
f.Intrinsic.Control.EndIf

f.Intrinsic.String.Build("{0}\Custom\5472\Templates\{1}.txt",v.Caller.GlobalDir,v.Caller.User.Trim,v.Local.sSFile)

f.Intrinsic.File.Exists(v.Local.sSFile,v.Local.bExists)
f.Intrinsic.Control.If(v.Local.bExists)
	f.Intrinsic.File.File2String(v.Local.sSFile,v.Global.sSignature)
f.Intrinsic.Control.Else
	f.Intrinsic.String.Build("Regards,{0}%USERFULLNAME%,{0}Email ID: %USEREMAILID%,{0}%MYCOMPANYNAME%. {0}",v.Ambient.NewLine,v.global.sSignature)
	f.Intrinsic.File.String2File(v.Local.sSFile,v.Global.sSignature)
f.Intrinsic.Control.EndIf

Program.Sub.TemplateFolderCheck.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

GUI.EffectiveDate..Visible(False)
GUI.F_ContactList..Visible(False)
F.ODBC.Connection!con.Close
f.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_EXTRACT_BACS.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf
Program.Sub.Unload.End

Program.Sub.EffectiveDate_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("EffectiveDate_UnLoad_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

f.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("EffectiveDate_UnLoad_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_EXTRACT_BACS.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.EffectiveDate_UnLoad.End

Program.Sub.cmdSelectEffDate_Click.Start
F.Intrinsic.Control.SetErrorHandler("EffectiveDate_Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.dDateHold.Declare(Date)
'This should be added to 3 business days or whatever days?
'F.Intrinsic.Date.DateAdd("D", 3, V.Ambient.Date, v.Local.dDateHold)
'f.Intrinsic.Control.If(V.Screen.EffectiveDate!dtpEffectiveDate.Value,<,v.Local.dDateHold)
'	f.Intrinsic.UI.Msgbox("Effective date should have 3 days for processing. Please select another date","Select Effective Date")
'	f.Intrinsic.Control.ExitSub
'f.Intrinsic.Control.Endif
V.Global.dEffectiveDate.Set(V.Screen.EffectiveDate!dtpEffectiveDate.Value)
GUI.EffectiveDate..Visible(False)
f.Intrinsic.Control.CallSub(PreProc)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("EffectiveDate_Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_EXTRACT_BACS.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(UnLoad)
Function.Intrinsic.Control.EndIf
Program.Sub.cmdSelectEffDate_Click.End

Program.Sub.PreProc.Start
F.Intrinsic.Control.SetErrorHandler("OpChk_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sFileRow.Declare
v.Local.sFileWrite.Declare(String)
v.Local..BulkDeclareString(sDest_Sort_Code, sDest_Acct_Num, sDest_Acct_Type, sBacs_Code, sDebit_Sort_Code, sDebit_Acct_Num, sFree_Format, sAmount, sOriginator_Name, sPayment_Ref, sDest_Acct_Name, sProcess_Date)
V.Local.sInvoice.Declare
v.Local.iCount.Declare(long)
V.Local.iRet.Declare
V.Local.fRet.Declare
V.Local.sText.Declare
V.Local.bExist.Declare
V.Local.sTemp.Declare
V.Local.PasswordEncoded.Declare(ByteArray)
V.Local.sPasswordEncoded.Declare
V.Local.sPasswordDecoded.Declare

'create table for loop in email section
F.Data.DataTable.CreateFromSQL("ELoop", "con", "Select Distinct VENDOR_ID From V_AP_INTL_BACS where EXPORTED = '' And V_EMAIL_FLAG = '1' ", TRUE)

'1/First checking for BACS records to actually export

'F.Data.DataTable.CreateFromSQL("EXT","con","select NUM,VENDOR_ID,V_DEST_BANK_SORT_CD,BANK_ACCOUNT_ENC,CHECK_AMT,V_DEST_BANK_NAME, Check_amt as Check_amt_act,CHECK_DATE,VENDOR_NAME,INVOICE_NO,EXPORTED from AP_INTL_BACS where EXPORTED <> 'Y'", TRUE)
F.Data.DataTable.CreateFromSQL("EXT","con","select NUM,VENDOR_ID,V_DEST_BANK_SORT_CD,BANK_ACCOUNT_ENC,CHECK_AMT,V_DEST_BANK_NAME,V_EMAIL_FLAG, Check_amt as Check_amt_act,CHECK_DATE,VENDOR_NAME,INVOICE_NO,EXPORTED from AP_INTL_BACS where EXPORTED <> 'Y' and INVOICE_NO IN (SELECT INV_NO from AP_CHECKS)", TRUE)

Function.Intrinsic.Control.If(Variable.DataTable.EXT.RowCount, =, 0)
	F.Intrinsic.UI.Msgbox("No BACS records found!","No Records")
	F.Intrinsic.Control.CallSub(Unload)
	f.Intrinsic.Control.ExitSub
Function.Intrinsic.Control.Else
	'add column for email
	F.Data.DataTable.AddColumn("EXT","EMAIL_FLAG","String")
	F.Data.Dictionary.CreateFromSQL("DICT", "con","Select VENDOR_ID, EMAIL_FLAG From VEND_INTL_BACS")
	F.Data.Dictionary.SetDefaultReturn("Dict", "")
	F.Data.DataTable.FillFromDictionary("EXT","Dict","VENDOR_ID","EMAIL_FLAG")
	F.Data.Dictionary.Close("Dict")
	
	F.Data.DataTable.AddColumn("EXT","BANK_ACCOUNT_DECODED","String")
	'2/Loop through the RecordSet, get the value, format, concatinate to build string to sFileWrite, set Exported column to 'Y'
	'While waiting for the R&D Core, we can hard code here
	f.Intrinsic.Control.For(v.Local.iCount,0,Variable.DataTable.EXT.RowCount--,1)
		'Getting Destination Sort Code
		v.Local.sDest_Sort_Code.Set(Variable.DataTable.EXT(v.Local.iCount).V_DEST_BANK_SORT_CD!FieldValTrim)
		f.Intrinsic.String.LPad(v.Local.sDest_Sort_Code,"0",6,v.Local.sDest_Sort_Code)	
		'Getting Destination Account Number
		'Get Encrypted bank account number
		'V.Local.PasswordEncoded.Set(Variable.DataTable.EXT(v.Local.iCount).BANK_ACCOUNT_ENC!FieldValTrim)
		'F.Global.Encryption.Decrypt(V.Local.PasswordEncoded.Set,V.Local.sPasswordDecoded)
		F.Global.Encryption.Decrypt(Variable.DataTable.EXT(v.Local.iCount).BANK_ACCOUNT_ENC!FieldVal,V.Local.sPasswordDecoded)
		
		F.Data.DataTable.SetValue("EXT",V.Local.iCount,"BANK_ACCOUNT_DECODED",V.Local.sPasswordDecoded)
		v.Local.sDest_Acct_Num.Set(Variable.DataTable.EXT(v.Local.iCount).BANK_ACCOUNT_DECODED!FieldValTrim)
		F.Intrinsic.String.LPad(V.Local.sDest_Acct_Num,"0",8,V.Local.sDest_Acct_Num)
		'Getting Destination Account Type
		V.Local.sDest_Acct_Type.Set(" ")
		f.Intrinsic.String.LPad(V.Local.sDest_Acct_Type," ",1,v.Local.sDest_Acct_Type)
		'Setting BACS Code
		v.Local.sBacs_Code.Set("99")
		f.Intrinsic.String.LPad(v.Local.sBacs_Code," ",2,v.Local.sBacs_Code)
		'Getting Debit Sort Code
		v.Local.sDebit_Sort_Code.Set("405162")
		f.Intrinsic.String.LPad(v.Local.sDebit_Sort_Code," ",6,v.Local.sDebit_Sort_Code)
		'Getting Debit Account Number
		v.Local.sDebit_Acct_Num.Set("11661424")
		f.Intrinsic.String.LPad(v.Local.sDebit_Acct_Num," ",8,v.Local.sDebit_Acct_Num)
		'Setting Free Format (4 spaces)
		v.Local.sFree_Format.Set("    ")
		'Getting Amount and reformat it to no decimal with max character of 10 
		V.Local.fRet.Set(V.DataTable.EXT(V.Local.iCount).CHECK_AMT!FieldValFloat)
'		v.Local.sAmount.Set(Variable.DataTable.EXT(v.Local.iCount).CHECK_AMT!FieldValTrim)
'		F.Intrinsic.Math.ConvertToFloat(V.Local.sAmount,V.Local.fRet)
'		V.Local.sText.Set(V.Local.sAmount)
		F.Intrinsic.String.ConvertToString(V.Local.fRet,V.Local.sText)
		F.Intrinsic.String.IsInString(V.Local.sText.Trim,".",True,V.Local.bExist)
		F.Intrinsic.Control.If(V.Local.bExist,=,False)
			F.Intrinsic.String.Concat(V.Local.sText.Trim,".00",V.Local.sTemp)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Split(V.Local.sText,".",V.Local.sTemp)
			F.Intrinsic.String.RPad(V.Local.sTemp(1),"0",2,V.Local.sText)
			F.Intrinsic.String.Concat(V.Local.sTemp(0).Trim,".",V.Local.sText,V.Local.sTemp)
'			F.Intrinsic.Math.Round(V.Local.fRet,2,V.Local.fRet)
'			F.Intrinsic.String.ConvertToString(V.Local.fRet,V.Local.sTemp)
		F.Intrinsic.Control.EndIf
'		F.Intrinsic.String.Split(V.Local.sTemp,".",V.Local.sText)
'		F.Intrinsic.String.Len(V.Local.sText(1),V.Local.iRet)
'		F.Intrinsic.Control.if(V.Local.iRet,=,1)
'			F.Intrinsic.String.RPad(V.Local.sText(1),"0",2,V.Local.sTemp)
'			F.Intrinsic.String.Concat(V.Local.sText(0),V.Local.sTemp,V.Local.sTemp)
'		F.Intrinsic.Control.Else
'			F.Intrinsic.String.Concat(V.Local.sText(0),V.Local.sText(1),V.Local.sTemp)
'		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.LPad(V.Local.sTemp,"0",11,V.Local.sTemp)
		V.Local.sAmount.Set(V.Local.sTemp)
'		f.Intrinsic.String.LPad(v.Local.sAmount,"0",11,v.Local.sAmount)
		'Getting Originators Name
		v.Local.sOriginator_Name.Set(" Whittle Flooring ")
'		f.Intrinsic.String.UCase(v.Local.sOriginator_Name,v.Local.sOriginator_Name)
		f.Intrinsic.String.RPad(v.Local.sOriginator_Name," ",18,v.Local.sOriginator_Name)
		'Getting Payment Reference
		v.Local.sPayment_Ref.Set(" PURCHASE INVOICE ")
		f.Intrinsic.String.LPad(v.Local.sPayment_Ref," ",18,v.Local.sPayment_Ref)
		'Getting Destination Account Name
		v.Local.sDest_Acct_Name.Set(Variable.DataTable.EXT(v.Local.iCount).V_DEST_BANK_NAME!FieldValTrim)
		f.Intrinsic.String.UCase(v.Local.sDest_Acct_Name,v.Local.sDest_Acct_Name)
		f.Intrinsic.String.RPad(v.Local.sDest_Acct_Name," ",18,v.Local.sDest_Acct_Name)
		'Getting Processing Date
		v.Local.sProcess_Date.Set("")
		f.Intrinsic.String.RPad(v.Local.sProcess_Date," ",6,v.Local.sProcess_Date)
		'F.Intrinsic.String.Format(v.Global.dEffectiveDate,"DDMMYY",v.Local.sProcess_Date)
		'Invoice no
		V.Local.sInvoice.Set(Variable.DataTable.EXT(v.Local.iCount).INVOICE_NO!FieldValTrim)
		'Build the string for the line of the BACS text file
'		f.Intrinsic.String.Concat(v.Local.sFileWrite, v.Local.sDest_Sort_Code, v.Local.sDest_Acct_Num, v.Local.sDest_Acct_Type, v.Local.sBacs_Code, v.Local.sDebit_Sort_Code, v.Local.sDebit_Acct_Num, v.Local.sFree_Format, v.Local.sAmount, v.Local.sOriginator_Name, v.Local.sPayment_Ref, v.Local.sDest_Acct_Name, v.Local.sProcess_Date,v.Local.sFileWrite)
		F.Intrinsic.String.Build("{0},{1},{2},{3},{4},0,{5}",V.Local.sDest_Acct_Name.Trim,V.Local.sOriginator_Name,V.Local.sDest_Sort_Code.Trim,V.Local.sDest_Acct_Num.Trim,V.Local.sAmount.Trim,V.Local.sBacs_Code.Trim,V.Local.sFileRow)
'		F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sFileWrite)
		F.Intrinsic.Control.If(V.Local.sFileWrite.Trim,=,"")
			V.Local.sFileWrite.Set(V.Local.sFileRow)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sFileRow,V.Local.sFileWrite)
		F.Intrinsic.Control.EndIf
	'End Loop
	
	f.Intrinsic.Control.Next(v.Local.iCount)
Function.Intrinsic.Control.EndIf
'3/Save the Exported BACS file
F.Intrinsic.Control.CallSub(filesave,"sFileWrite",v.Local.sFileWrite)
'Set the Exported column in the BACS_PAYMENT to 'Y'
F.Intrinsic.UI.Msgbox("Have the data been exported properly?","BACS ACH Export Barclay",4,V.Local.iRet)
F.Intrinsic.Control.If(V.Local.iRet,=,6)
	Function.ODBC.Connection!con.Execute("Update AP_INTL_BACS Set EXPORTED = 'Y' Where EXPORTED = ''")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("OpChk_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_EXTRACT_BACS.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.PreProc.End

Program.Sub.FileSave.Start
F.Intrinsic.Control.SetErrorHandler("FileSave_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sFile.Declare(String)

F.Intrinsic.UI.ShowSaveFileDialog("","txt|*.txt",V.Local.sFile)
'F.Intrinsic.UI.ShowSaveFileDialog("","out|*.out",V.Local.sFile)
F.Intrinsic.Control.If(V.Local.sFile,<>,"***CANCEL***")
	F.Intrinsic.File.String2File(V.Local.sFile,V.Args.sFileWrite)
Function.Intrinsic.Control.Else
	Function.Intrinsic.Control.CallSub(filesave)
F.Intrinsic.Control.EndIf
'create email table
Function.Intrinsic.Control.CallSub(CreateEmailTable)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("FileSave_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_EXTRACT_BACS.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(CreateEmailTable)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.FileSave.End

Program.Sub.f_contactlist_unload.Start
F.Intrinsic.Control.SetErrorHandler("f_contactlist_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.iRet.Declare
F.Intrinsic.UI.Msgbox("You may have to compose the email manually. Are you sure you want to exit this screen?","Verification",4,v.Local.iRet)
f.Intrinsic.Control.If(v.Local.iRet,=,6)
	F.Intrinsic.Control.CallSub(Unload)
f.Intrinsic.Control.Else
	F.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Label("f_contactlist_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_INT_BACS_EXPORT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.f_contactlist_unload.End

Program.Sub.cmdadd_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdadd_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sEmail.Declare(String)

'Exit if no email selected or enetered
F.Intrinsic.Control.If(V.Screen.F_ContactList!txtEmail.Text,=,"")
	F.Intrinsic.UI.Msgbox("Please enter a recipient email address..","Invalid Email")
	Gui.F_ContactList.txtEmail.SetFocus
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
'Checking for valid email
V.Local.sEmail.Set(V.Screen.F_ContactList!txtEmail.Text)
F.Intrinsic.String.Split(V.Local.sEmail.Trim,"@",V.Local.sEmail)
F.Intrinsic.Control.If(V.Local.sEmail.UBound,<>,1)
	F.Intrinsic.UI.Msgbox("Invalid email address.","Invalid Email")
	Gui.F_ContactList.txtEmail.SetFocus
	Gui.F_ContactList.txtEmail.SelectAll
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.String.Split(V.Local.sEmail(1),".",V.Local.sEmail)
	F.Intrinsic.Control.If(V.Local.sEmail.UBound,<,1)
		F.Intrinsic.UI.Msgbox("Invalid email address.","Invalid Email")
		Gui.F_ContactList.txtEmail.SetFocus
		Gui.F_ContactList.txtEmail.SelectAll
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
'if we havent exitSub, then add the email
GUI.F_ContactList.lstEmails.AddListItem(V.Screen.F_ContactList!txtEmail.Text,V.Screen.F_ContactList!txtEmail.Text)
GUI.F_ContactList.txtEmail.Text("")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdadd_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_INT_BACS_EXPORT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.cmdadd_click.End

Program.Sub.cmdremove_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdremove_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

GUI.F_ContactList.lstEmails.RemoveItem(V.Screen.F_ContactList!lstEmails.SelectedItemKey)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdremove_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_INT_BACS_EXPORT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.cmdremove_click.End

Program.Sub.cmdsend_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdsend_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sAttach.Declare(String)
V.Local.sError.Declare(String)
v.Local.sRow.Declare
v.Local.sTo.Declare
v.Local.sSubject.Declare
v.Local.sBody.Declare
V.Local.sSender.Declare
V.Local.sHTML.Declare
v.Local.iC.Declare(Long)
v.Local.iID.Declare(Long)

V.Local.sHTML.Set("")

'check there exists at least one email
Gui.F_ContactList.lstEmails.RetrieveAllListItems(V.Local.sRow)
Function.Intrinsic.Control.If(V.Local.sRow, =, "***NORETURN***")
	F.Intrinsic.UI.Msgbox("Add an Email to Send")
	Function.Intrinsic.Control.ExitSub
Function.Intrinsic.Control.EndIf
GUI.F_ContactList.cmdSend.DisableOnClick(11)
F.Intrinsic.String.Split(V.Local.sRow, "*!*", V.Local.sRow)
F.Intrinsic.Control.For(V.Local.iC, 0, V.Local.sRow.UBound, 1)
	Function.Intrinsic.Control.If(V.Local.iC, =, 0)
		F.Intrinsic.String.Build("*!*{0}", V.Local.sRow(V.Local.iC), V.Local.sTo)
	Function.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}@!@{1}", V.Local.sTo,V.Local.sRow(V.Local.iC), V.Local.sTo)
	Function.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iC)
V.Local.sBody.Set(V.Screen.F_ContactList!mltxtBody.Text)
V.Local.sSubject.Set(V.Screen.F_ContactList!txtSubject.Text)
F.Global.Security.getuserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iID)
F.Intrinsic.String.Build("{0}*!*",V.Screen.F_ContactList!txtReplyEmail.Text,V.Local.sSender)
'Function.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.local.iID, "", V.Local.sSubject, V.Screen.F_ContactList!txtReplyEmail.Text, V.Local.sTo, V.Local.sBody)
'Function.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.local.iID, "5472_GAB_EXTRACT_BACS", V.Local.sSubject, V.Local.sSender, V.Local.sTo, V.Local.sBody)
'George Sandoval 25 August 2022 - Add attachment functionality to the remittance email being sent out. 
'QueueMessage(SCoCode, IUserID, CallingPrgm, Subject, SSenderEmailAndSSenderNameDelimitedByStarBangStar, Recipients, Body, Mode, ReplyToAddress, ReadReceipt, AdditionalHeaders, DateDeferredDelivery, SMeta0, SMeta1, SMeta2, SMeta3, SMeta4, AttachmentFileName*!*AttachmentFilePath, DeleteAttach, HtmlBody)

'Build string for attachment file name and path for queue message
F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sEmailName,V.Global.sFilePath,V.Local.sAttach)


'Function.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.local.iID, "5472_GAB_EXTRACT_BACS", V.Local.sSubject, V.Local.sSender, V.Local.sTo, V.Local.sBody,1, "", "", "", "", "", "", "", "", "", V.Local.sAttach, False, "")



'Function.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.local.iID, "5472_GAB_EXTRACT_BACS", V.Local.sSubject, V.Local.sSender, V.Local.sTo, V.Local.sBody,1, "", "", "", "", "", "", "", "", "", V.Local.sAttach, False, "")
F.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.local.iID, "5472_GAB_EXTRACT_BACS", V.Local.sSubject, V.Local.sSender, V.Local.sTo, V.Local.sBody,5, "", False, "", "", "", "", "", "", "", V.Local.sAttach, False, "")


'Function.Global.Messaging.QueueMessage(sCoCode, iUserID, CallingPrgm, Subject, SenderEmail*!*sSenderName, Recipients, Body)
'this happens last because of the wait for  dismiss
Gui.F_ContactList..Visible(False)
gui.F_ContactList.cmdSend.Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdsend_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_INT_BACS_EXPORT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.cmdsend_click.End

Program.Sub.ddlcontact_click.Start


F.Intrinsic.Control.SetErrorHandler("ddlcontact_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.Control.If(V.Screen.F_ContactList!ddlContact.Text,<>,"")
	Gui.F_ContactList.txtEmail.Text(V.Screen.F_ContactList!ddlContact.Text)
F.Intrinsic.Control.Else
	Gui.F_ContactList.txtEmail.Text("")
F.Intrinsic.Control.endif

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlcontact_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_INT_BACS_EXPORT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.ddlcontact_click.End

Program.Sub.CreateEmailTable.Start
F.Intrinsic.Control.SetErrorHandler("CreateEmailTable_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare
v.Local.iC.Declare(Long)
v.Local.iCView.Declare(Long)
v.Local.iCEmail.Declare(Long)
V.Local.sVendor.Declare
V.Local.sFilter.Declare
V.Local.sInvoice.Declare
V.Local.sAmount.Declare
V.Local.sSQL.Declare
V.Local.sReplyEmail.Declare
V.Local.sNotify.Declare
V.Local.sBody.Declare
v.Local.fTotalAmt.Declare
v.Local.sTotalAmt.Declare
v.Local.sUserFullName.Declare
v.Local.sCompanyName.Declare
v.Local.sUserEmail.Declare
v.Local.sVendorName.Declare
v.Local.sSignature.Declare


f.Global.Security.GetUserEmail(v.Caller.User,v.Local.sUserEmail)
f.ODBC.Connection!ConxCom.openCommonConnection
f.Intrinsic.String.Build("Select COMPANYNAME from COMPANIES where COCODE = '{0}'",v.Caller.CompanyCode,v.Local.sSql)
f.ODBC.Connection!ConxCom.executeandreturn(v.Local.sSql,v.Local.sCompanyName)
f.ODBC.Connection!ConxCom.Close


f.Global.Security.GetFullName(v.Caller.User,v.Local.sUserFullName)

'George Sandoval 25 August 2022 - Creating the remittance report for each vendor and attaching that to the email. They create the remittance manually through core, but it is all one report. Here, we are using a slighlty different report that will pass the vendor as the parameter so it splits them up and sends an email to each vendor that has a remaining balance AKA not a net amount of 0.


F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Eloop.RowCount--, 1)
	V.Local.sVendor.Set(V.DataTable.ELoop(V.Local.iC).VENDOR_ID!FieldValTrim)
	f.Intrinsic.String.Build("Select NAME_VENDOR from V_VENDOR_MASTER where VENDOR = '{0}'",V.Local.sVendor,v.Local.sSql)
	f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.sVendorName)
	'George Sndoval 25 August 2022 - Add Vendor name to a global variable to be used in the CreateReport Subroutine
	V.Global.sVendorName.Set(V.Local.sVendorName)
	
	
'	f.Intrinsic.Control.If(V.DataView.EXT_V.Exists)
'		F.Data.DataView.Close("EXT", "EXT_V")
'	f.Intrinsic.Control.EndIf
	'select to dataview
	F.Intrinsic.String.Build("VENDOR_ID = '{0}'", V.Local.sVendor,V.Local.sFilter)
	Function.Data.DataView.Create("EXT", "EXT_V", 22, V.Local.sFilter, "")
	Function.Data.DataTable.Compute("EXT","SUM(CHECK_AMT_ACT)",v.Local.sFilter,v.Local.fTotalAmt)
'	f.Intrinsic.String.Build("{0} {1}",v.ASCII.163,v.Local.fTotalAmt,v.Local.sTotalAmt)
	f.Intrinsic.String.Build("Payment Total (GBP): {0}",v.Local.fTotalAmt,v.Local.sTotalAmt)
	'loop through dataview
	V.Local.sInvoice.Set("")
	V.Local.sAmount.Set("")
	'Commented out by adsouza. Trying another format.
'	F.Intrinsic.Control.For(V.Local.iCView,0,Variable.DataView.BACS_DT!EXT_V.RowCount--, 1)
'		'build 2 strings here: invoice and amount
'		Function.Intrinsic.Control.If(V.Local.iCView, =, 0)
'			F.Intrinsic.String.Build("{0}",Variable.DataView.BACS_DT!EXT_V(V.Local.iCView).NUM!FieldValTrim,V.Local.sInvoice)
'			F.Intrinsic.String.Build("{0}",Variable.DataView.BACS_DT!EXT_V(V.Local.iCView).CHECK_AMT!FieldValTrim,V.Local.sAmount)
'		Function.Intrinsic.Control.Else
'			F.Intrinsic.String.Build("{0}, {1} ",V.Local.sInvoice ,Variable.DataView.BACS_DT!EXT_V(V.Local.iCView).NUM!FieldValTrim,V.Local.sInvoice)
'			F.Intrinsic.String.Build("{0}, {1} ",V.Local.sAmount ,Variable.DataView.BACS_DT!EXT_V(V.Local.iCView).CHECK_AMT!FieldValTrim,V.Local.sAmount)
'		Function.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Next(V.Local.iCView)

'George Sandoval 9 Sep 2022 - Add a check here so if the total is 0, do not send an email out and go to the next vendor
F.Intrinsic.Control.If(V.Local.fTotalAmt,<>,0)

'this is a better format.
	F.Intrinsic.Control.For(V.Local.iCView,0,Variable.DataView.EXT!EXT_V.RowCount--, 1)
		'build string for invoice details
		Function.Intrinsic.Control.If(V.Local.iCView, =, 0)
'			F.Intrinsic.String.Build("{2}Invoice No:{1}{0}{1}{1}Amount: {4} {3}{2}",Variable.DataView.EXT!EXT_V(V.Local.iCView).INVOICE_NO!FieldValTrim,v.Ambient.Tab,v.Ambient.NewLine,Variable.DataView.EXT!EXT_V(V.Local.iCView).CHECK_AMT_ACT!FieldValfloat,v.ASCII.163,V.Local.sInvoice)
			F.Intrinsic.String.Build("{2}Invoice No:{1}{0}{2}",Variable.DataView.EXT!EXT_V(V.Local.iCView).INVOICE_NO!FieldValTrim,v.Ambient.Tab,v.Ambient.NewLine,V.Local.sInvoice)

		Function.Intrinsic.Control.Else
'			F.Intrinsic.String.Build("{4}Invoice No:{1}{0}{1}{1}Amount: {5} {3}{2}",Variable.DataView.EXT!EXT_V(V.Local.iCView).INVOICE_NO!FieldValTrim,v.Ambient.Tab,v.Ambient.NewLine,Variable.DataView.EXT!EXT_V(V.Local.iCView).CHECK_AMT_ACT!FieldValfloat,v.Local.sInvoice,v.ASCII.163,V.Local.sInvoice)
			F.Intrinsic.String.Build("{4}Invoice No:{1}{0}{1}{1}{2}",Variable.DataView.EXT!EXT_V(V.Local.iCView).INVOICE_NO!FieldValTrim,v.Ambient.Tab,v.Ambient.NewLine,Variable.DataView.EXT!EXT_V(V.Local.iCView).CHECK_AMT_ACT!FieldValfloat,v.Local.sInvoice,V.Local.sInvoice)
		Function.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCView)
	
'	F.Data.DataView.Close("EXT", "EXT_V")
		'set gui variables
		'set ddl with dataTable
		'George Sandoval 10 Feb 2022 Editing the values to add to the drop down list
		'Preventing blank entries from being added to the drop down list with if statement to check datatable values
		'GUI.F_ContactList.ddlContact.AddItem("")
		
		
'		F.Intrinsic.String.Build("Select EMAIL1 From CONTACT Where CUST = '{0}'", V.Local.sVendor, V.Local.ssql)
		F.Intrinsic.String.Build("Select EMAIL1 From CONTACT Where CUST = '{0}' and TYPE = 'V'", V.Local.sVendor, V.Local.ssql)
			F.Data.DataTable.CreateFromSQL("EMAIL", "con", V.Local.ssql)
				F.Intrinsic.Control.For(V.Local.iCEmail, 0, V.DataTable.EMAIL.RowCount--, 1)
				F.Intrinsic.Control.If(V.DataTable.EMAIL(V.Local.iCEmail).EMAIL1!FieldValTrim,<>,"")
					GUI.F_ContactList.ddlContact.AddItem(Variable.DataTable.EMAIL(V.Local.iCEmail).EMAIL1!FieldValTrim)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCEmail)
			F.Data.DataTable.Close("EMAIL")
			F.Intrinsic.String.Build("Select EMAIL2 From CONTACT Where CUST = '{0}'", V.Local.sVendor, V.Local.ssql)
			F.Data.DataTable.CreateFromSQL("EMAIL", "con", V.Local.ssql)
'			F.Intrinsic.Control.If(V.Local.sSQL,<>,"")
				F.Intrinsic.Control.For(V.Local.iCEmail, 0, V.DataTable.EMAIL.RowCount--, 1)
				F.Intrinsic.Control.If(V.DataTable.EMAIL(V.Local.iCEmail).EMAIL2!FieldValTrim,<>,"")
					GUI.F_ContactList.ddlContact.AddItem(Variable.DataTable.EMAIL(V.Local.iCEmail).EMAIL2!FieldValTrim)
			F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Next(V.Local.iCEmail)
				
			F.Data.DataTable.Close("EMAIL")	
		
		F.Intrinsic.String.Build("BACS Email Notificiation For '{0}'", V.Local.sVendor, V.Local.sNotify)
		Gui.F_ContactList..Caption(V.Local.sNotify)
		'set reply to email
		F.Global.Security.GetUserEmail(V.Caller.User,V.Caller.CompanyCode,V.Local.sReplyEmail)
		GUI.F_ContactList.txtReplyEmail.Text(V.Local.sReplyEmail)
		'set subject email
		GUI.F_ContactList.txtSubject.Text("BACS Payment Notification")
		'set body email
		'F.Intrinsic.String.Build("Company: {0}{1}{1}Invoices: {2}{3}{3}Payment Amount: {4}{5}{5}",V.Local.sVendor,V.Ambient.NewLine,V.Local.sInvoice,V.Ambient.NewLine,V.Local.sAmount,V.Ambient.NewLine,V.Local.sBody)
		
		'Set Body from template
		v.Local.sbody.Set(v.Global.sTemplate)
		v.Local.sSignature.Set(v.Global.sSignature)
		'replace wild card strings with values.
		f.Intrinsic.String.Replace(v.Local.sBody,"%VENDORNAME%",v.Local.sVendorName.Trim,v.Local.sBody)
		f.Intrinsic.String.Replace(v.Local.sBody,"%INVOICEDETAILS%",v.Local.sInvoice.trim,v.Local.sBody)
		f.Intrinsic.String.Replace(v.Local.sBody,"%TOTALAMT%",v.Local.sTotalAmt.trim,v.Local.sBody)
		f.Intrinsic.String.Replace(v.Local.sSignature,"%USEREMAILID%",V.Local.sReplyEmail.trim,v.Local.sSignature)
		f.Intrinsic.String.Replace(v.Local.sSignature,"%USERFULLNAME%",V.Local.sUserFullName.trim,v.Local.sSignature)
		f.Intrinsic.String.Replace(v.Local.sSignature,"%MYCOMPANYNAME%",V.Local.sCompanyName.trim,v.Local.sSignature)
		
		f.Intrinsic.String.Build("{0}{1}{2}",v.local.sBody,v.Ambient.NewLine,v.Local.sSignature,v.Local.sBody)
		
		Gui.F_ContactList.mltxtBody.Text(V.Local.sBody.Trim)
		
		'George Sandoval 9 Sep 2022 - Add functionality to create remittance reports for each vendor receiving an email
		F.Intrinsic.Control.CallSub(CreateReport)
		'get emails: when user clicks send
		Gui.F_ContactList..Visible(True)
		GUI.F_ContactList..WaitForDismiss
		GUI.F_ContactList.ddlContact.ClearItems
		GUI.F_ContactList.txtReplyEmail.Text("")
		Gui.F_ContactList.mltxtBody.Text("")
		GUI.F_ContactList.lstEmails.ClearItems
F.Intrinsic.Control.EndIf
F.Data.DataView.Close("EXT", "EXT_V")
F.Intrinsic.Control.Next(V.Local.iC)

Gui.F_ContactList..Show


F.Intrinsic.Control.Label("CreateEmailTable_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_5472_INT_BACS_EXPORT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf
Program.Sub.CreateEmailTable.End

Program.Sub.CreateReport.Start
V.Local.iBILog.Declare(Long)
V.Local.iPreProc.Declare(Long)
V.Local.iReportID.Declare(Long)
V.Local.iRunID.Declare(Long)
V.Local.iSeq.Declare(Long)
V.Local.sDate.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sFileName.Declare(String)
V.Local.sNamePath.Declare(String)
'V.Local.sFilePath.Declare(String)
V.Local.sParamNames.Declare(String)
V.Local.sParamValues.Declare(String)
V.Local.sReport.Declare(String)
V.Local.sReportIDNumber.Declare(String)



'George Sandoval 9 September 2022 - Additional feature to print remittances for each vendor to be sent out in the email

'Initial report info


F.Global.BI.GetRunID(V.Local.iRunID)
'F.Global.BI.GetIDFromName("AP_Check_InvDtl_5472_Vendor.rpt",V.Local.iReportID,True)

F.Global.BI.InitializeReport("5472_BACS_Remittance_Report","AP_Check_InvDtl_5472_Vendor.rpt",V.Local.iReportID)
F.Global.BI.StartLogging(V.Local.iRunID,V.Local.iReportID,-1,"",V.Local.iBILog)
'F.Global.BI.StartLogging(V.Local.iRunID,iRunID,V.Local.iSeq,"",V.Local.iBILog)

'Get the data here to print for 1 vendor at a time from the vendor set in the loop in the CreateEmailTable subroutine
'F.Intrinsic.String.Build("Select TRMNL,RPTYP,CHKNO,INV_NO,INV_SEQ,INV_DATE,PURCH_ORD,GROSS,NET,CHKDT,DESCR,VEN_NAME FROM V_AP_CHECKS where VEN_NAME = '{0}'",V.Global.sVendorName,V.Local.sReport)
F.Intrinsic.String.Build("Select * FROM CHECKS_LOG where PAYEE = '{0}'",V.Global.sVendorName,V.Local.sReport)
F.Data.DataTable.CreateFromSQL("dtPrint","con",V.Local.sReport)
F.Data.DataTable.AddColumn("dtPrint","RUN_ID",Float)
F.Data.DataTable.SetValue("dtPrint",-1,"RUN_ID",V.Local.iRunID)
'F.Data.DataTable.SaveToDB("dtPrint","con","GCG_5472_BI_VENDOR","",128,"TRMNL@!@TRMNL*!*RPTYP@!@RPTYP*!*CHKNO@!@CHKNO*!*INV_NO@!@INV_NO*!*INV_SEQ@!@INV_SEQ*!*INV_DATE@!@INV_DATE*!*PURCH_ORD@!@PURCH_ORD*!*GROSS@!@GROSS*!*NET@!@NET*!*CHKDT@!@CHKDT*!*DESCR@!@DESCR*!*VEN_NAME@!@VEN_NAME*!*RUN_ID@!@RUN_ID")
F.Data.DataTable.Close("dtPrint")

'Stop BI logging
F.Global.BI.StopLogging(V.Local.iBILog)



'Build Parameter names
V.Local.sParamNames.Set("Terminal*!*RptID*!*Vendor")
'Build Paramater values
F.Intrinsic.String.Build("{0}*!*{1}*!*{2}",V.Caller.Terminal,V.Local.iReportID,V.Global.sVendorName.RTrim,V.Local.sParamValues)

F.Intrinsic.String.Format(V.Ambient.Date.PervasiveDate,YYYY_MM_DD,V.Local.sDate)

'F.Intrinsic.String.ConvertToString(V.Local.iReportID,V.Local.sReportIDNumber)
'F.Intrinsic.String.Build("{0}_{1}_{2}.PDF",V.Ambient.Date.PervasiveDate,V.Caller.User,V.Global.sVendorName.RTrim,V.Global.sFileName)
'F.Intrinsic.String.Build("{0}_{1}_{2}.pdf",V.Ambient.Date.PervasiveDate,V.Caller.User,V.Global.sVendorName.RTrim,V.Global.sFileName)
'F.Intrinsic.String.Build("{0}\CUSTOM\5472\Export\{1}",V.Caller.GlobalDir,V.Global.sFileName,V.Global.sFilePath)
F.Intrinsic.String.Build("{0}\CUSTOM\5472\Export\",V.Caller.GlobalDir,V.Global.sFilePath)

F.Intrinsic.String.Build("{0}\Custom\5472\Export\{1}_{2}_{3}.pdf",V.Caller.GlobalDir,V.Local.sDate,V.Caller.User,V.Global.sVendorName.RTrim,V.Global.sFileName)



'Run report preprocessor to produce the report
'F.Global.BI.RunReportPreProcessor(V.Local.iRunID,V.Local.iBILog,V.Local.sParamNames,V.Local.sParamValues,V.Local.iReportID,16,True,"",-1,"",-1,V.Global.sFilePath,"",V.Local.iPreProc)
'F.Global.BI.RunReportPreProcessor(V.Local.iRunID,V.Local.iBILog,V.Local.sParamNames,V.Local.sParamValues,V.Local.iReportID,4,True,"",-1,"",-1,V.Global.sFilePath,"",V.Local.iPreProc)
F.Global.BI.RunReportPreProcessor(V.Local.iRunID,V.Local.iBILog,V.Local.sParamNames,V.Local.sParamValues,V.Local.iReportID,20,True,"",-1,"",0,V.Global.sFileName,"",V.Local.iPreProc)

'George Sandoval 28 March 2023 - Build File name for email to be sent out later
F.Intrinsic.String.Build("{0}_{1}_{2}.pdf",V.Local.sDate,V.Caller.User,V.Global.sVendorName.RTrim,V.Global.sEmailName)

'Create file name and path to save the report

'F.Intrinsic.String.Build("{0}_{1}_{2}*!*{3}",V.Local.sDate,V.Caller.User,V.Global.sVendorName.RTrim,V.Local.sFileName,V.Local.sNamePath)
'Save the report
'F.Global.BI.SaveReport(V.Local.iReportID,16,V.Local.sParamNames,V.Local.sParamValues,V.Global.sFileName)
'F.Global.BI.SaveReport(V.Local.iReportID,4,V.Local.sParamNames,V.Local.sParamValues,V.Global.sFileName)



'Build String to delete records from the BI table
'F.Intrinsic.String.Build("DELETE FROM BI_GCG_4444_ASSIGN_HIST WHERE RUN_ID = '{0}'",V.Local.BiRun,V.Local.sDelete)
'F.ODBC.Connection!con.Execute(V.Local.sDelete)
Program.Sub.CreateReport.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$Sales Order Approval dashboard for approver listing SO to be approved
${$5$}$2.0.0.0$}$2
${$6$}$gsandoval$}$20230426092702127$}$pxyipsmdqasyAY7lJ5+YqAibKN4I37/YudkzCwm6ngQVnAa1WOGMTNz/vTBl+ab2V/flWUNQmjlzDz1Sbc9mmw==
Program.Sub.Comments.End
